{"remainingRequest":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hngskj/Projects/webapp/labnote/src/views/Chemical.vue?vue&type=style&index=0&id=2ea14d68&scoped=true&lang=css&","dependencies":[{"path":"/Users/hngskj/Projects/webapp/labnote/src/views/Chemical.vue","mtime":1581408715585},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jaGVtaWNhbC12aWV3IHsKICBAYXBwbHkgcmVsYXRpdmUgZmxleCBmbGV4LXJvdyBteS0zMiBteC1hdXRvIGJnLXdoaXRlIHAtNCBpbnNldC0wIHRleHQtbGVmdCByb3VuZGVkIHNoYWRvdzsKICBtYXgtd2lkdGg6IDYwMHB4OwogIG1pbi1oZWlnaHQ6IDAlOwp9Cg=="},{"version":3,"sources":["Chemical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA","file":"Chemical.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"chemical-view\">\n    <div class=\"flex flex-col flex-grow items-start justify-between px-4\">\n      <div v-for=\"(chem, $chemId) of chemical.ingredients\" :key=\"$chemId\">\n        <div v-if=\"$chemId > 0\" class=\"my-4\">\n          <hr />\n        </div>\n        <div class=\"inline-block text-2xl font-black\">\n          <input\n            type=\"text\"\n            :value=\"chem.name\"\n            list=\"name\"\n            @change=\"updateChemicalProperty($event, 'name', chem.id)\"\n          />\n          <datalist id=\"name\">\n            <option\n              v-for=\"(name, $nameID) of names\"\n              :key=\"$nameID\"\n              :value=\"name\"\n            ></option>\n          </datalist>\n        </div>\n        <div>Volumn: {{ chem.volumn }}{{ chem.v_unit }}</div>\n        <div>Concentration: {{ chem.concentration }}{{ chem.c_unit }}</div>\n        <div>Product Number: {{ chem.product_number }}</div>\n        <div>State: {{ chem.state }}</div>\n        <div>Solvent: {{ chem.solvent }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\"\nimport data_autocomplete from \"@/data/data_autocomplete\"\n\nexport default {\n  data() {\n    return {\n      names: data_autocomplete.names,\n      formulas: data_autocomplete.formulas,\n      products: data_autocomplete.products\n    }\n  },\n  computed: {\n    ...mapGetters([\"getChemical\"]),\n    chemical() {\n      return this.getChemical(this.$route.params.id)\n    }\n  },\n  methods: {\n    updateChemicalProperty(e, key, chemid) {\n      const found = this.chemical.ingredients.find(({ id }) => id === chemid)\n      this.$store.commit(\"UPDATE_CHEMICAL\", {\n        chemical: found,\n        key,\n        value: e.target.value\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chemical-view {\n  @apply relative flex flex-row my-32 mx-auto bg-white p-4 inset-0 text-left rounded shadow;\n  max-width: 600px;\n  min-height: 0%;\n}\n</style>\n"]}]}