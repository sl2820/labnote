{"remainingRequest":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hngskj/Projects/webapp/labnote/src/views/Note.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/hngskj/Projects/webapp/labnote/src/views/Note.vue","mtime":1581054362519},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubm90ZS10dWkgewogIEBhcHBseSBwLTQgYmctZ3JheS0xMDAgaC1zY3JlZW4gdy0yLzUgb3ZlcmZsb3ctYXV0byBpbmxpbmUtYmxvY2s7Cn0KLmNoZW1pY2FsIHsKICBAYXBwbHkgYmctdGVhbC0yMDAgcC0zIG1iLTQgdGV4dC1sZWZ0IHNoYWRvdy1tZCByb3VuZGVkLXNtOwp9Ci5jaGVtaWNhbC1iZyB7CiAgQGFwcGx5IGluc2V0LTAgYWJzb2x1dGU7CiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpOwp9Ci5wcm9jZXNzIHsKICBAYXBwbHkgYmctaW5kaWdvLTIwMCBwLTMgbWItNCB0ZXh0LWxlZnQgc2hhZG93LW1kIHJvdW5kZWQtZnVsbDsKfQoucHJvY2Vzcy1iZyB7CiAgQGFwcGx5IGluc2V0LTAgYWJzb2x1dGU7CiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpOwp9Ci5ub3RlLWd1aSB7CiAgQGFwcGx5IHctMy81IG92ZXJmbG93LWF1dG8gYmctZ3JheS0zMDAgaC1zY3JlZW4gaW5saW5lLWJsb2NrIHNoYWRvdy1pbm5lcjsKfQo="},{"version":3,"sources":["Note.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Note.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"note-tui\">\n      <div class=\"items-start\">\n        <AppButton\n          class=\"mx-3 mb-5 bg-teal-500 rounded-sm\"\n          @click=\"createChemical\"\n          >Create Chemical</AppButton\n        >\n        <AppButton\n          class=\"mx-3 mb-5 bg-indigo-500 rounded-full\"\n          @click=\"createProcess\"\n          >Create Process</AppButton\n        >\n        <div\n          class=\"chemical\"\n          v-for=\"(chemical, $chemicalIndex) in note.components\"\n          :key=\"$chemicalIndex + '-chemical'\"\n          draggable\n          @drop=\"moveChemical($event, $chemicalIndex)\"\n          @dragover.prevent\n          @dragenter.prevent\n          @dragstart.self=\"pickupChemical($event, $chemicalIndex)\"\n          @click=\"openChemical(chemical)\"\n        >\n          <AppChemical :chemical=\"chemical\" :chemicalIndex=\"$chemicalIndex\" />\n        </div>\n\n        <div\n          class=\"process\"\n          v-for=\"(process, $processIndex) in note.actions\"\n          :key=\"$processIndex + '-process'\"\n          draggable\n          @drop=\"moveProcess($event, $processIndex)\"\n          @dragover.prevent\n          @dragenter.prevent\n          @dragstart.self=\"pickupProcess($event, $processIndex)\"\n          @click=\"openProcess(process)\"\n        >\n          <AppProcess :process=\"process\" :processIndex=\"$processIndex\" />\n        </div>\n      </div>\n\n      <div\n        class=\"chemical-bg\"\n        v-if=\"isChemicalOpen\"\n        @click.self=\"closeChemicalProcess\"\n      >\n        <router-view />\n      </div>\n      <div\n        class=\"process-bg\"\n        v-if=\"isProcessOpen\"\n        @click.self=\"closeChemicalProcess\"\n      >\n        <router-view />\n      </div>\n    </div>\n    <div class=\"note-gui\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\"\n// import { uuid } from \"@/utils\"\nimport AppButton from \"@/components/AppButton\"\nimport AppChemical from \"@/components/AppChemical\"\nimport AppProcess from \"@/components/AppProcess\"\n\nexport default {\n  components: { AppButton, AppChemical, AppProcess },\n  data() {\n    return {}\n  },\n  computed: {\n    ...mapState([\"note\"]),\n    isChemicalOpen() {\n      return this.$route.name === \"chemical\"\n    },\n    isProcessOpen() {\n      return this.$route.name === \"process\"\n    }\n  },\n  methods: {\n    createChemical() {},\n    moveChemical(e, toChemicalIndex) {\n      const fromChemicalIndex = e.dataTransfer.getData(\"from-chemical-index\")\n      this.$store.commit(\"MOVE_CHEMICAL\", {\n        fromChemicalIndex,\n        toChemicalIndex\n      })\n    },\n    pickupChemical(e, fromChemicalIndex) {\n      e.dataTransfer.effectAllowed = \"move\"\n      e.dataTransfer.dropEffect = \"move\"\n      e.dataTransfer.setData(\"from-chemical-index\", fromChemicalIndex)\n      // e.dataTransfer.setData(\"type\", \"flask\")\n    },\n    openChemical(chemical) {\n      this.$router.push({ name: \"chemical\", params: { id: chemical.id } })\n    },\n\n    createProcess() {},\n    moveProcess(e, toProcessIndex) {\n      const fromProcessIndex = e.dataTransfer.getData(\"from-process-index\")\n      this.$store.commit(\"MOVE_PROCESS\", {\n        fromProcessIndex,\n        toProcessIndex\n      })\n    },\n    pickupProcess(e, fromProcessIndex) {\n      e.dataTransfer.effectAllowed = \"move\"\n      e.dataTransfer.dropEffect = \"move\"\n      e.dataTransfer.setData(\"from-process-index\", fromProcessIndex)\n      // e.dataTransfer.setData(\"type\", \"flask\")\n    },\n    openProcess(process) {\n      this.$router.push({ name: \"process\", params: { id: process.id } })\n    },\n\n    closeChemicalProcess() {\n      this.$router.push({ name: \"note\" })\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.note-tui {\n  @apply p-4 bg-gray-100 h-screen w-2/5 overflow-auto inline-block;\n}\n.chemical {\n  @apply bg-teal-200 p-3 mb-4 text-left shadow-md rounded-sm;\n}\n.chemical-bg {\n  @apply inset-0 absolute;\n  background: rgba(0, 0, 0, 0.5);\n}\n.process {\n  @apply bg-indigo-200 p-3 mb-4 text-left shadow-md rounded-full;\n}\n.process-bg {\n  @apply inset-0 absolute;\n  background: rgba(0, 0, 0, 0.5);\n}\n.note-gui {\n  @apply w-3/5 overflow-auto bg-gray-300 h-screen inline-block shadow-inner;\n}\n</style>\n"]}]}