{"remainingRequest":"/Users/hngskj/Projects/webapp/labnote/node_modules/babel-loader/lib/index.js!/Users/hngskj/Projects/webapp/labnote/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/hngskj/Projects/webapp/labnote/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hngskj/Projects/webapp/labnote/src/components/AppChemical.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hngskj/Projects/webapp/labnote/src/components/AppChemical.vue","mtime":1580983691430},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hngskj/Projects/webapp/labnote/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9obmdza2ovUHJvamVjdHMvd2ViYXBwL2xhYm5vdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgY2hlbWljYWw6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGNoZW1pY2FsSW5kZXg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsibm90ZSJdKSwgewogICAgc3VtbWVkVm9sdW1uOiBmdW5jdGlvbiBzdW1tZWRWb2x1bW4oKSB7CiAgICAgIHZhciBzdiA9IDA7CiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTsKICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7CiAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gdGhpcy5jaGVtaWNhbC5pbmdyZWRpZW50c1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHsKICAgICAgICAgIHZhciBjaGVtID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgaWYgKGNoZW0udl91bml0ID09PSAidUwiKSB7CiAgICAgICAgICAgIHN2ICs9IGNoZW0udm9sdW1uICogMC4wMDE7CiAgICAgICAgICB9IGVsc2UgaWYgKGNoZW0udl91bml0ID09PSAibUwiKSB7CiAgICAgICAgICAgIHN2ICs9IGNoZW0udm9sdW1uOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlOwogICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTsKICAgICAgICAgIH0KICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7CiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHN2OwogICAgfSwKICAgIGluZ3JlZGllbnRMZW5ndGg6IGZ1bmN0aW9uIGluZ3JlZGllbnRMZW5ndGgoKSB7CiAgICAgIHJldHVybiB0aGlzLmNoZW1pY2FsLmluZ3JlZGllbnRzLmxlbmd0aDsKICAgIH0KICB9KSwKICBtZXRob2RzOiB7CiAgICByZW1vdmVDaGVtaWNhbDogZnVuY3Rpb24gcmVtb3ZlQ2hlbWljYWwobm90ZSwgY2hlbWljYWxJbmRleCkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoIlJFTU9WRV9DSEVNSUNBTCIsIHsKICAgICAgICBub3RlOiBub3RlLAogICAgICAgIGNoZW1pY2FsSW5kZXg6IGNoZW1pY2FsSW5kZXgKICAgICAgfSk7CiAgICB9LAogICAgdG9Gb3JtdWxhOiBmdW5jdGlvbiB0b0Zvcm11bGEobmFtZSkgewogICAgICB2YXIgbnVtID0gbmFtZS5tYXRjaCgvXGQvZyk7CiAgICAgIHZhciBzdWIgPSBbXTsKCiAgICAgIGlmIChudW0pIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlOwogICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTsKICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yMiA9IG5hbWVbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHsKICAgICAgICAgICAgdmFyIG4gPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgICBpZiAobi5tYXRjaCgvXGQvKSkgewogICAgICAgICAgICAgIHN1Yi5wdXNoKCI8c3ViPiIgKyBuLnRvU3RyaW5nKCkgKyAiPC9zdWI+Iik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgc3ViLnB1c2gobik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gLy8gY29uc29sZS5sb2coc3ViKQoKICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7CiAgICAgICAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICAgIF9pdGVyYXRvcjIucmV0dXJuKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjIpIHsKICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBzdWIuam9pbigiIik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIG5hbWU7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["AppChemical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GADA;AAWA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AACA,UAAA,EAAA,GAAA,CAAA;AADA;AAAA;AAAA;;AAAA;AAEA,6BAAA,KAAA,QAAA,CAAA,WAAA,8HAAA;AAAA,cAAA,IAAA;;AACA,cAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,YAAA,EAAA,IAAA,IAAA,CAAA,MAAA,GAAA,KAAA;AACA,WAFA,MAEA,IAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,YAAA,EAAA,IAAA,IAAA,CAAA,MAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,aAAA,EAAA;AACA,KAZA;AAaA,IAAA,gBAbA,8BAaA;AACA,aAAA,KAAA,QAAA,CAAA,WAAA,CAAA,MAAA;AACA;AAfA,IAXA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,IADA,EACA,aADA,EACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,iBAAA,EAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,aAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,IAJA,EAIA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,UAAA,GAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,gCAAA,IAAA,mIAAA;AAAA,gBAAA,CAAA;;AACA,gBAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,QAAA,EAAA,GAAA,QAAA;AACA,aAFA,MAEA;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA,WAPA,CAQA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,OAVA,MAUA;AACA,eAAA,IAAA;AACA;AACA;AApBA;AA5BA,CAAA","sourcesContent":["<template>\n  <div>\n    <ul class=\"flex justify-between\">\n      <li class=\"mr-2\">\n        🧪\n        <div\n          class=\"inline-block mb-0\"\n          v-for=\"(ingredient, $ingredientIndex) in chemical.ingredients\"\n          :key=\"$ingredientIndex\"\n        >\n          <div\n            class=\"inline-block font-bold\"\n            v-html=\"toFormula(ingredient.name)\"\n          ></div>\n          <div\n            v-if=\"$ingredientIndex + 1 < ingredientLength\"\n            class=\"inline-block font-bold\"\n          >\n            +\n          </div>\n        </div>\n\n        <div\n          class=\"inline-block ml-5 italic\"\n          v-if=\"chemical.ingredients.length === 1\"\n        >\n          {{ chemical.ingredients[0].concentration\n          }}{{ chemical.ingredients[0].c_unit }}\n        </div>\n\n        <div class=\"inline-block ml-5 underline\">{{ summedVolumn }}mL</div>\n      </li>\n      <li class=\"mr-2\">\n        <button\n          class=\"inline-block text-sm\"\n          @click.stop=\"removeChemical(note, chemicalIndex)\"\n        >\n          ✖️\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\"\nexport default {\n  props: {\n    chemical: {\n      type: Object,\n      required: true\n    },\n    chemicalIndex: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    ...mapState([\"note\"]),\n    summedVolumn() {\n      let sv = 0\n      for (const chem of this.chemical.ingredients) {\n        if (chem.v_unit === \"uL\") {\n          sv += chem.volumn * 0.001\n        } else if (chem.v_unit === \"mL\") {\n          sv += chem.volumn\n        }\n      }\n      return sv\n    },\n    ingredientLength() {\n      return this.chemical.ingredients.length\n    }\n  },\n  methods: {\n    removeChemical(note, chemicalIndex) {\n      this.$store.commit(\"REMOVE_CHEMICAL\", { note, chemicalIndex })\n    },\n    toFormula(name) {\n      let num = name.match(/\\d/g)\n      let sub = []\n      if (num) {\n        for (const n of name) {\n          if (n.match(/\\d/)) {\n            sub.push(\"<sub>\" + n.toString() + \"</sub>\")\n          } else {\n            sub.push(n)\n          }\n        }\n        // console.log(sub)\n        return sub.join(\"\")\n      } else {\n        return name\n      }\n    }\n  }\n}\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}